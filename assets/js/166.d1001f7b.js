(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{951:function(t,e,v){"use strict";v.r(e);var r=v(36),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"vue数据流-和-react数据流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue数据流-和-react数据流"}},[t._v("#")]),t._v(" vue数据流 和 react数据流")]),t._v(" "),v("p",[t._v("vue  react 数据流 是单向 的   父--\x3e  子")]),t._v(" "),v("p",[t._v("vue还有一个概念 是 v-model")]),t._v(" "),v("p",[t._v("在"),v("strong",[t._v("vue")]),t._v(" "),v("strong",[t._v("React")]),t._v("中"),v("strong",[t._v("数据流")]),t._v("向是"),v("strong",[t._v("单向")]),t._v("的，"),v("strong",[t._v("由父节点流向子节点")]),t._v("，如果父节点的props发生了改变，那么React会递归遍历整个组件")]),t._v(" "),v("p",[v("strong",[t._v("父组件通过绑定 props 的方式，将数据传递给子组件，但是子组件自己并没有权利修改这些数据，如果要修改，只能把修改这一个行为通过 event 的方式报告给父组件，由父组件本身决定改如何处理数据。")])]),t._v(" "),v("p",[v("strong",[t._v("vue 另一个概念 v-model双向数据   无论数据改变，或是用户操作，都能带来互相的变动，自动更新。")])]),t._v(" "),v("p",[t._v("v-model 一般用在 表单元素  核心 是 他帮助我们  绑定value  + oniput 文本框值改变的事件")])])}),[],!1,null,null,null);e.default=s.exports}}]);